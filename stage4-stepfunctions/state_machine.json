{
  "Comment": "Orchestrate Athena extraction with failure handling",
  "StartAt": "StartExtraction",
  "States": {
    "StartExtraction": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:athena:startQueryExecution",
      "Parameters": {
        "QueryString.$": "$.query",
        "WorkGroup": "pipeline-wg",
        "ResultConfiguration": {
          "OutputLocation": "s3://rafay-aws-pipeline/athena_results/"
        }
      },
      "ResultPath": "$.QueryInfo",
      "Next": "WaitForQuery"
    },
    "WaitForQuery": {
      "Type": "Wait",
      "Seconds": 5,
      "Next": "GetQueryStatus"
    },
    "GetQueryStatus": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:athena:getQueryExecution",
      "Parameters": {
        "QueryExecutionId.$": "$.QueryInfo.QueryExecutionId"
      },
      "ResultPath": "$.QueryStatus",
      "Next": "CheckIfDone"
    },
    "CheckIfDone": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.QueryStatus.QueryExecution.Status.State",
          "StringEquals": "SUCCEEDED",
          "Next": "Done"
        },
        {
          "Variable": "$.QueryStatus.QueryExecution.Status.State",
          "StringEquals": "FAILED",
          "Next": "FailState"
        },
        {
          "Variable": "$.QueryStatus.QueryExecution.Status.State",
          "StringEquals": "CANCELLED",
          "Next": "FailState"
        }
      ],
      "Default": "WaitForQuery"
    },
    "FailState": {
      "Type": "Fail",
      "Error": "AthenaQueryFailed",
      "Cause": "The Athena query execution failed or was cancelled."
    },
    "Done": {
      "Type": "Succeed"
    }
  }
}
